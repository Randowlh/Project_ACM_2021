{
	"cpp":{
		"prefix": "spfa",
		"body":[
			"struct edge{",
			"	int w,to,nxt;",
			" }eg[maxm];",
			" int head[maxn];",
			" int ecnt=0;",
			" inline void add(int u,int v,int w){",
			"	eg[++ecnt].nxt=head[u];",
			"	eg[ecnt].w=w;",
			"	eg[ecnt].to=v;",
			"	head[u]=ecnt;",
			" }",
			" inline void cl(int n){",
			"	 for(int i=0;i<=n;i++)",
			"		 head[i]=0;",
			"	 ecnt=0;",
			"}",
			"int n,m;",
			"int dis[maxn];",
			"bool vis[maxn];",
			"int cnt[maxn];",
			"bool spfa(int s){",
			"	 for(int i=1;i<=n;i++)",
			"		 vis[i]=cnt[i]=0,dis[i]=llinf;",
			"	 cnt[s]=vis[s]=1;",
			"	 dis[s]=0;",
			"	 queue<int> q;",
			"	 q.push(s);",
			"	 while(!q.empty()){",
			"		 int t=q.front();",
			"		 q.pop();",
			"		 vis[t]=0;",
			"		 for(int i=head[t];i;i=eg[i].nxt){",
			"			 int to=eg[i].to,w=eg[i].w;",
			"			 if(dis[to]>dis[t]+w){",
			"				 dis[to]=dis[t]+w;",
			"				 if(!vis[to]){",
			"					 vis[to]=1;",
			"					 q.push(to);",
			"					 cnt[to]++;",
			"					 if(cnt[to]>=n){",
			"						 return false;",
			"					 }",
			"				 }",
			"			 }",
			"		 }",
			"	 }",
			"	 return true;",
			"}"
		],
		"description": "SPFA最短路算法"
	}
}